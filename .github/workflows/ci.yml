name: Static Analysis and E2E Testing

on:
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js for Linting
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Step 3: Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install
        
      # # Step 3: Install Docker Compose (if not pre-installed)
      # - name: Install Docker Compose
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker-compose

      # # Step 4: Start services with Docker Compose
      # - name: Start services with Docker Compose
      #   run: docker-compose up --build -d  # Start services in detached mode

      # #Checking docker log files to ensure the server is running properly
      # - name: Check Docker Compose Logs
      #   if: failure()  # Only runs if the previous step fails
      #   run: docker-compose logs
        
      # # Step 5: Wait for Frontend to be Ready
      # - name: Wait for Frontend
      #   run: npx wait-on http://localhost:3000  # Wait for frontend to be ready

      # Step 7: Run ESLint on JavaScript Files
      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint

      # Step 8: Run StyleLint on CSS Files
      - name: Run StyleLint
        working-directory: ./frontend
        run: npm run stylelint

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12' 

      # Step 3: Install Pylint
      - name: Install Pylint
        working-directory: ./backend
        run: pip install pylint

      # Step 4: Run Pylint on Python Files
      - name: Run Pylint
        working-directory: ./backend
        run: pylint --errors-only --disable=import-error app/**/*.py

        # Step 6: Run Cypress Tests
      - name: Run Cypress tests
        run: npx cypress run

      # # Step 8: Stop Docker Compose services
      # - name: Stop Docker Compose
      #   run: docker-compose down
